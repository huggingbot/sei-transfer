{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InstantiateMsg",
  "type": "object",
  "required": [
    "cw20_addr",
    "cw20_decimals",
    "fee_basis_point",
    "owner"
  ],
  "properties": {
    "cw20_addr": {
      "type": "string"
    },
    "cw20_decimals": {
      "type": "integer",
      "format": "uint32",
      "minimum": 0.0
    },
    "fee_basis_point": {
      "$ref": "#/definitions/Uint64"
    },
    "owner": {
      "type": "string"
    }
  },
  "definitions": {
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    }
  }
}
